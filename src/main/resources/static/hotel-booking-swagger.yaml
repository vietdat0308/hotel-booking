openapi: 3.0.1
info:
  title: Hotel Booking APIs
  version: 1.0.0
servers:
  - url: /api/v1
paths:
  /hotels:
    get:
      tags:
        - Hotels
      summary: Get a list of hotels
      operationId: getHotels
      parameters:
        - name: searchKey
          required: false
          in: query
          schema:
            type: string
        - name: filter
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/HotelFilterDto'
        - name: pageable
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/PageableDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelsDto'
        '500':
          description: Internal Server Error
  /bookings:
    get:
      tags:
        - Bookings
      summary: Get a list of bookings
      operationId: getBookings
      parameters:
        - name: pageable
          required: false
          in: query
          schema:
            $ref: '#/components/schemas/PageableDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsDto'
        '500':
          description: Internal Server Error
    post:
        tags:
          - Bookings
        summary: Create a booking
        operationId: createBooking
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingCreateDto'
          required: true
        responses:
          '201':
            $ref: '#/components/responses/ResourceCreated'
          '400':
            description: Bad request
          '500':
            description: Internal Server Error
  /bookings/{id}:
    get:
      tags:
        - Bookings
      summary: Get booking details
      operationId: getBookingDetail
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDto'
        "404":
          description: Not found
        '500':
          description: Internal Server Error

components:
  schemas:
    HotelFilterDto:
      type: object
      properties:
        location:
          type: integer
          format: int32
    BookingsDto:
      type: object
      properties:
        data:
          type: array
          default: [ ]
          items:
            $ref: '#/components/schemas/BookingDto'
        total:
          type: integer
          format: int64
          default: 0
    BookingDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        room:
          type: string
        user:
          type: string
        checkIn:
          type: string
          format: date
        checkOut:
          type: string
          format: date
        createdDate:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/BookingStatusDto'
    BookingCreateDto:
      type: object
      properties:
        roomId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        checkIn:
          type: string
          format: date
        checkOut:
          type: string
          format: date
    BookingUpdateDto:
      type: object
      properties:
        page:
          type: integer
    HotelsDto:
      type: object
      properties:
        data:
          type: array
          default: [ ]
          items:
            $ref: '#/components/schemas/HotelDto'
        total:
          type: integer
          format: int64
          default: 0
    HotelDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        location:
          $ref: '#/components/schemas/LocationDto'
    BookingStatusDto:
      type: string
      enum: [ BOOKED, COMPLETED, CANCELLED ]
    LocationDto:
      type: string
      enum: [ HCM, HN ]
    PageableDto:
      type: object
      properties:
        page:
          type: integer
        pageSize:
          type: integer
  responses:
    ResourceCreated:
      description: The resource is created
      content:
        application/json:
          schema:
            type: integer
            format: int64
